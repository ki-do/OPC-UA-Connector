// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package opcuaclientmx.actions;

import java.util.concurrent.CompletableFuture;
import org.eclipse.milo.opcua.sdk.client.OpcUaClient;
import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import opcuaclientmx.impl.OpcUaClientManager;
import org.eclipse.milo.opcua.sdk.client.nodes.UaNode;
import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.logging.ILogNode;

public class OpcUaGetNodeDisplayName extends CustomJavaAction<java.lang.String>
{
	/** @deprecated use OpcUaServerCfg.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __OpcUaServerCfg;
	private final opcuaclientmx.proxies.OpcUaServerCfg OpcUaServerCfg;
	private final java.lang.String nodeId;

	public OpcUaGetNodeDisplayName(
		IContext context,
		IMendixObject _opcUaServerCfg,
		java.lang.String _nodeId
	)
	{
		super(context);
		this.__OpcUaServerCfg = _opcUaServerCfg;
		this.OpcUaServerCfg = _opcUaServerCfg == null ? null : opcuaclientmx.proxies.OpcUaServerCfg.initialize(getContext(), _opcUaServerCfg);
		this.nodeId = _nodeId;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		OpcUaClient client = OpcUaClientManager.retrieve(this.context(), this.OpcUaServerCfg);
		logger.trace(String.format("[GetDisplayName] Getting node's display name from [Server:%s|NodeId:%s]",this.OpcUaServerCfg.getServerID(),this.nodeId) );
		
		NodeId requestedNode;
		try {
			requestedNode = NodeId.parse(this.nodeId);
		} catch (Exception e) {
			throw new CoreException("Unable to connect to the node, is your NodeId accurate?",e);
		}
		CompletableFuture<UaNode> nodeFuture = client.getAddressSpace().getNodeInstance(requestedNode);
		UaNode node = nodeFuture.get();

		String displayName = node.getDisplayName().get().getText();

        logger.trace(String.format("[GetDisplayName] %s", displayName));
		return displayName;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "OpcUaGetNodeDisplayName";
	}

	// BEGIN EXTRA CODE
    private static final ILogNode logger = Core.getLogger("OpcUA");
	// END EXTRA CODE
}
