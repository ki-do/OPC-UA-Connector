// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package opcuaclientmx.actions;

import org.eclipse.milo.opcua.sdk.client.OpcUaClient;
import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;
import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;
import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;
import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;
import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import opcuaclientmx.impl.OpcUaClientManager;
import com.mendix.logging.ILogNode;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class OpcUaGetNamespaceIdxFromURI extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __OpcUaServerCfg;
	private opcuaclientmx.proxies.OpcUaServerCfg OpcUaServerCfg;
	private java.lang.String NamespaceUri;

	public OpcUaGetNamespaceIdxFromURI(IContext context, IMendixObject OpcUaServerCfg, java.lang.String NamespaceUri)
	{
		super(context);
		this.__OpcUaServerCfg = OpcUaServerCfg;
		this.NamespaceUri = NamespaceUri;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		this.OpcUaServerCfg = this.__OpcUaServerCfg == null ? null : opcuaclientmx.proxies.OpcUaServerCfg.initialize(getContext(), __OpcUaServerCfg);

		// BEGIN USER CODE
		OpcUaClient client = OpcUaClientManager.retrieve(this.context(), this.OpcUaServerCfg);
		NodeId namespaceArrayNodeId = new NodeId(0,2255);
		DataValue response;
		logger.trace(String.format("[Read] Reading from [Server:%s|NodeId:%s]",this.OpcUaServerCfg.getServerID(),namespaceArrayNodeId) );
		response = client.readValue(0, TimestampsToReturn.Both, namespaceArrayNodeId).get();
		if ( response.getStatusCode() == StatusCode.GOOD ) {
			Variant val = response.getValue();

			String[] varVal = (String[]) val.getValue();
			
			int namespaceIndex = -1;
            for (int i = 0; i < varVal.length; i++) {
                if (varVal[i].equals(this.NamespaceUri)) {
                    namespaceIndex = i;
                    break;
                }
            }

            if (namespaceIndex == -1) {
                return "Namespace URI not found in the NamespaceArray";
            } else {
                return "Namespace URI found at index: " + namespaceIndex;
            }
		}
		return "Smth went wrong";
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "OpcUaGetNamespaceIdxFromURI";
	}

	// BEGIN EXTRA CODE
    private static final ILogNode logger = Core.getLogger("OpcUA");
	// END EXTRA CODE
}
